package MemoryGames;
public class Carta {
    private String letra;
    private boolean visible;

    public Carta(String letra) {
        this.letra = letra;
        this.visible = false;
    }

    public boolean isVisible() {
        return visible;
    }

    public void mostrar() {
        visible = true;
    }

    public void ocultar() {
        visible = false;
    }

    public boolean esIgual(Carta otra) {
        return this.letra.equals(otra.letra);
    }

    @Override
    public String toString() {
        return visible ? letra : "X";
    }
}
....
package MemoryGames;
import java.util.Scanner;

public class JuegoMemoria {
    private Tablero tablero;
    private int intentos;

    public JuegoMemoria(int filas, int columnas) {
        tablero = new Tablero(filas, columnas);
        intentos = 0;
    }

    public void jugar() {
        Scanner sc = new Scanner(System.in);

        while (!tablero.todasVisibles()) {
            tablero.mostrarTablero();

            int[] coords1 = pedirCoordenadas(sc, "1");
            Carta carta1 = tablero.getCarta(coords1[0], coords1[1]);
            carta1.mostrar();
            tablero.mostrarTablero();

            int[] coords2;
            do {
                coords2 = pedirCoordenadas(sc, "2");
            } while (coords1[0] == coords2[0] && coords1[1] == coords2[1]);

            Carta carta2 = tablero.getCarta(coords2[0], coords2[1]);
            carta2.mostrar();
            tablero.mostrarTablero();

            if (!carta1.esIgual(carta2)) {
                System.out.println("No coinciden. Ocultando en 2 segundos...");
                esperar(2);
                carta1.ocultar();
                carta2.ocultar();
            } else {
                System.out.println("¡Coincidencia!");
            }

            intentos++;
        }

        System.out.println("¡Felicidades! Terminaste en " + intentos + " intentos.");
        sc.close();
    }

    private int[] pedirCoordenadas(Scanner sc, String etiqueta) {
        int fila, col;
        do {
            System.out.print("Fila " + etiqueta + ": ");
            fila = sc.nextInt();
            System.out.print("Columna " + etiqueta + ": ");
            col = sc.nextInt();
        } while (!tablero.coordenadasValidas(fila, col) || tablero.getCarta(fila, col).isVisible());

        return new int[]{fila, col};
    }

    private void esperar(int segundos) {
        try {
            Thread.sleep(segundos * 1000);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }
}
...
package MemoryGames;
import java.util.*;

public class Tablero {
    private Carta[][] cartas;
    private int filas, columnas;

    private final String[] letrasDisponibles = {
        "A", "B", "C", "D", "E", "F", "G", "H",
        "I", "J", "K", "L", "M", "N", "O", "P",
        "Q", "R", "S", "T", "U", "V", "W", "X",
        "Y", "Z", "A1", "B1", "C1", "D1", "E1", "F1"
    };

    public Tablero(int filas, int columnas) {
        this.filas = filas;
        this.columnas = columnas;
        int numPares = (filas * columnas) / 2;
        if (numPares > letrasDisponibles.length) {
            throw new IllegalArgumentException("No hay suficientes pares para este tamaño de tablero.");
        }
        cartas = new Carta[filas][columnas];
        inicializarCartas();
    }

    private void inicializarCartas() {
        List<Carta> lista = new ArrayList<>();
        int numPares = (filas * columnas) / 2;

        for (int i = 0; i < numPares; i++) {
            String letra = letrasDisponibles[i];
            lista.add(new Carta(letra));
            lista.add(new Carta(letra));
        }

        Collections.shuffle(lista);

        int index = 0;
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                cartas[i][j] = lista.get(index++);
            }
        }
    }

    public void mostrarTablero() {
        System.out.print("    ");
        for (int j = 0; j < columnas; j++) {
            System.out.printf("%4d", j);
        }
        System.out.println();

        for (int i = 0; i < filas; i++) {
            System.out.printf("%2d |", i);
            for (int j = 0; j < columnas; j++) {
                System.out.printf("%4s", cartas[i][j]);
            }
            System.out.println();
        }
    }

    public boolean coordenadasValidas(int fila, int col) {
        return fila >= 0 && fila < filas && col >= 0 && col < columnas;
    }

    public Carta getCarta(int fila, int col) {
        return cartas[fila][col];
    }

    public boolean todasVisibles() {
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                if (!cartas[i][j].isVisible()) {
                    return false;
                }
            }
        }
        return true;
    }
}
....
package MemoryGames;
public class Main {
    public static void main(String[] args) {
        JuegoMemoria juego = new JuegoMemoria(8, 8); 
        juego.jugar();
    }
}
