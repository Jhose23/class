public class Carta {
    private String letra;
    private boolean visible;

    public Carta(String letra) {
        this.letra = letra;
        this.visible = false;
    }

    public boolean isVisible() {
        return visible;
    }

    public void mostrar() {
        visible = true;
    }

    public void ocultar() {
        visible = false;
    }

    public boolean esIgual(Carta otra) {
        return this.letra.equals(otra.letra);
    }

    @Override
    public String toString() {
        return visible ? letra : "X";
    }
}
...
import java.util.ArrayList;
import java.util.Collections;

public class Tablero {
    private Carta[][] cartas;
    private int filas, columnas;

    private final String[] letrasDisponibles = {
        "A", "B", "C", "D", "E", "F", "G", "H",
        "I", "J", "K", "L", "M", "N", "O", "P",
        "Q", "R", "S", "T", "U", "V", "W", "X",
        "Y", "Z", "A1", "B1", "C1", "D1", "E1", "F1"
    };

    public Tablero(int filas, int columnas) {
        this.filas = filas;
        this.columnas = columnas;
        cartas = new Carta[filas][columnas];
        inicializarCartas();
    }

    private void inicializarCartas() {
        ArrayList<Carta> lista = new ArrayList<>();
        int numPares = (filas * columnas) / 2;

        for (int i = 0; i < numPares; i++) {
            String letra = letrasDisponibles[i];
            lista.add(new Carta(letra));
            lista.add(new Carta(letra));
        }

        Collections.shuffle(lista);

        int index = 0;
        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                cartas[i][j] = lista.get(index++);
            }
        }
    }

    public void mostrarTablero() {
        System.out.print("    ");
        for (int j = 0; j < columnas; j++) {
            System.out.print(j + "   ");
        }
        System.out.println();

        for (int i = 0; i < filas; i++) {
            System.out.print(i + " | ");
            for (int j = 0; j < columnas; j++) {
                System.out.print(cartas[i][j] + "   ");
            }
            System.out.println();
        }
    }

    public Carta getCarta(int fila, int col) {
        return cartas[fila][col];
    }

    public void ocultarNoCoincidentes(Carta c1, Carta c2) {
        if (!c1.esIgual(c2)) {
            c1.ocultar();
            c2.ocultar();
        }
    }

    public boolean todasVisibles() {
        for (int i = 0; i < filas; i++)
            for (int j = 0; j < columnas; j++)
                if (!cartas[i][j].isVisible())
                    return false;
        return true;
    }

    public int getFilas() {
        return filas;
    }

    public int getColumnas() {
        return columnas;
    }
}
...
import java.util.Scanner;

public class JuegoMemoria {
    private Tablero tablero;
    private int intentos;

    public JuegoMemoria(int filas, int columnas) {
        tablero = new Tablero(filas, columnas);
        intentos = 0;
    }

    public void jugar() {
        Scanner sc = new Scanner(System.in);
        while (!tablero.todasVisibles()) {
            tablero.mostrarTablero();

            int f1, c1, f2, c2;
            Carta carta1, carta2;

            // Primera carta
            System.out.print("Fila 1: ");
            f1 = sc.nextInt();
            System.out.print("Columna 1: ");
            c1 = sc.nextInt();
            carta1 = tablero.getCarta(f1, c1);
            carta1.mostrar();
            tablero.mostrarTablero();

            // Segunda carta
            System.out.print("Fila 2: ");
            f2 = sc.nextInt();
            System.out.print("Columna 2: ");
            c2 = sc.nextInt();

            while (f1 == f2 && c1 == c2) {
                System.out.println("No puedes elegir la misma carta. Intenta otra.");
                System.out.print("Fila 2: ");
                f2 = sc.nextInt();
                System.out.print("Columna 2: ");
                c2 = sc.nextInt();
            }

            carta2 = tablero.getCarta(f2, c2);
            carta2.mostrar();
            tablero.mostrarTablero();

            if (!carta1.esIgual(carta2)) {
                System.out.println("No coinciden. Ocultando en 2 segundos...");
                esperar(2);
                carta1.ocultar();
                carta2.ocultar();
            } else {
                System.out.println("¡Coincidencia!");
            }

            intentos++;
        }

        System.out.println("¡Felicidades! Terminaste en " + intentos + " intentos.");
        sc.close();
    }

    private void esperar(int segundos) {
        try {
            Thread.sleep(segundos * 1000);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
    }
}
...
public class Main {
    public static void main(String[] args) {
        JuegoMemoria juego = new JuegoMemoria(8, 8); // Tablero 8x8 con 32 pares
        juego.jugar();
    }
}

